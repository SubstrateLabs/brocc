[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "brocc-li"
dynamic = ["version"]
description = 'Search and chat with your digital life'
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [{ name = "Ben GðŸ¥¦", email = "ben@substrate.run" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "aiohttp>=3.11.16",
    "dateparser>=1.2.1",
    "dotenv>=0.9.9",
    "duckdb>=1.2.1",
    "fastapi>=0.115.12",
    "geotext>=0.4.0",
    "html-to-markdown>=1.2.0",
    "html5lib>=1.1",
    "lancedb>=0.21.2",
    "markdownify>=1.1.0",
    "numpy>=2.2.4",
    "pandas>=2.2.3",
    "pillow>=11.2.0",
    "platformdirs>=4.3.7",
    "polars>=1.26.0",
    "psutil>=7.0.0",
    "pyarrow>=19.0.1",
    "pydantic>=2.10.6",
    "pystray>=0.19.5",
    "pytest>=8.3.5",
    "python-dateutil>=2.9.0.post0",
    "pywebview>=5.4",
    "requests>=2.32.3",
    "rich>=13.9.4",
    "textual>=0.73.0",
    "unstructured[md]>=0.17.2",
    "uvicorn>=0.34.0",
    "websocket-client>=1.8.0",
    "websockets>=15.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0", 
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.3.0",
    "pyright>=1.1.350",
]

[project.scripts]
brocc = "brocc_li.entry_points:start"

[project.urls]
Documentation = "https://brocc.li"
Issues = "https://github.com/SubstrateLabs/brocc/issues"
Source = "https://github.com/SubstrateLabs/brocc"

[tool.hatch.version]
path = "src/brocc_li/__about__.py"

[tool.hatch.build]
include = [
  "src/**/*.py",
  "src/brocc_li/static/**/*"
]
exclude = [
  "tests/**"
]

[tool.hatch.build.targets.wheel]
packages = ["src/brocc_li"]

[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/brocc_li tests}"

[tool.coverage.run]
source_pkgs = ["brocc_li", "tests"]
branch = true
parallel = true
omit = ["src/brocc_li/__about__.py"]

[tool.coverage.paths]
brocc_li = ["src/brocc_li", "*/cli/src/brocc_li"]
tests = ["tests", "*/cli/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__", "build", "dist"]
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.11"
typeCheckingMode = "strict"
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportUnknownLambdaType = false
reportPrivateUsage = false

[tool.ruff]
line-length = 100
target-version = "py311"
# Add these common directories to exclude
extend-exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes 
    "I",   # isort
]
extend-select = [
    "B",   # flake8-bugbear (optional)
    "C4",  # flake8-comprehensions (optional)
]
ignore = [
    "E501",    # Line too long
]

[tool.ruff.lint.isort]
known-first-party = ["brocc_li"]

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"
indent-style = "space"
